read from top down view

window has public GameObject 2Dcounterpart, holds 2D window object that it corresponds to

(still havent done this stuff)
{
window has public viewWidth float
	calculate viewXMin = position - .5 * viewWidth
	calculate viewXMax = viewXMin + viewWidth
	(use these to programatically set trigger bounds for window)
}
window has trigger field in front of it
	zombie in trigger field
		-zombie has public GameObject visibleThruWindow
			-field is filled with window who owns the trigger field
		-zombie has xDisplacementFromWindow
			-if it is +10, window x pos + 10 = zmb x pos
		-zombie has distanceFromHouse
			-zombie y pos - window y pos
			window y + distanceFromHouse = zombie y
		-window has list of Zombies within its vision
			-when adding a new zombie, call "spawn zombie" method on 2D window
		
2d window
	(keep same scale on both tacview and window view)
	(later i can figure out how to convert the coords between them)
	public zmbFarScale (scale of zombie at far edge of window view)
	public zmbWindowScale (scale needed to make zombie appear to be at window)
	public zmbFarYPos (y pos of farthest edge of window view, farthest that zmb can be detected)
	public zmbWindowYPos (y pos needed to make zombie appear to be at window)

	public float windowRange
	public float scaleDiff (change in scale from farthest distance to window)
	public float posDiff (change in y position from farthest distance to window)

	start
		scaleDiff = zmbFarScale - zmbCloseScale
		posDiff = zmbFarYPos - zmbWIndowYPos
	
[I AM HERE. TODO: EVERYTHING PAST THIS]
	spawn zombie (gameObject tacViewZombie)
		instantiate windowZmb 
		add zombie to list of zombies in view
			((IF ZOMBIE FLASHES ONSCREEN AT DEFAULT POS FOR ONE FRAME))							instantiate at x position (windowXPos + zombie.xDisplace...)
			//should spawn zombie at corresponding x position

	update (every frame)
		for each zombie in zmbsInView
			x = windowPos + tacviewCounterpart.xDisplacement
			//calculate distance modifier for each zombie
			float distModifier = 1 - (distanceFromHouse / windowRange)
			y = farPos + (posDiff * distModifier)
			scale = farScale + (scaleDiff * distModifier)
	
2D zombie object
	public GameObject tacviewCounterpart
		(zombie in tacview to read position from)

	